{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","components/FormContacts/FormContacts.module.css","Redux/contacts/operations.js","Redux/contacts/contacts-selectors.js","components/FormContacts/FormContacts.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ListContacts/ListContacts.jsx","views/Contacts.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","module","exports","name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFilter","state","contacts","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","FormContacts","handleChange","setState","handleSubmit","event","preventDefault","onSubmit","reset","className","s","form","type","input","onChange","pattern","title","required","disabled","Component","connect","changeFilter","ContactItem","onDelete","id","onClick","handleDelete","fetchContacts","operations","useEffect","map","onAddContact","onChangeFilter"],"mappings":"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","file":"static/js/3.f5a67551.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1aIlQ\",\"input\":\"FormContacts_input__3B2vP\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const allContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [allContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.name === '') {\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className=\"label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={s.input}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"label\">\n          Phone Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            className={s.input}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={name === '' || number === '' ? true : false}\n          className=\"btn\"\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default FormContacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../Redux/contacts/actions';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"container\">\n    <label className=\"label\">\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} className=\"input\" />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, number, name } = contact;\n\n  const handleDelete = id => onDelete(id);\n\n  return (\n    <li key={id} id={id} className=\"contact\">\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" className=\"btn\" onClick={() => handleDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../Redux/contacts/operations';\nimport ContactItem from '../ContactItem';\nimport { getVisibleContacts } from '../../Redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nconst ListContacts = ({ contacts, onDelete, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <ul className=\"container list\">\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n  onDelete: id => dispatch(operations.deleteContact(id)),\n});\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../Redux/contacts/operations';\nimport { getFilter } from '../Redux/contacts/contacts-selectors';\nimport { changeFilter } from '../Redux/contacts/actions';\nimport FormContacts from '../components/FormContacts';\nimport Filter from '../components/Filter';\nimport ListContacts from '../components/ListContacts';\n\nconst Contacts = ({ filter, onAddContact, onChangeFilter }) => {\n  return (\n    <>\n      <h2 className=\"title\">Add contact</h2>\n      <FormContacts onSubmit={onAddContact} />\n\n      <h2 className=\"title\">Contacts list</h2>\n      <Filter value={filter} onChange={onChangeFilter} />\n\n      <ListContacts />\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(operations.addContact(contact)),\n  onChangeFilter: value => dispatch(changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}
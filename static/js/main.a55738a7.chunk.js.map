{"version":3,"sources":["Redux/contacts/actions.js","Redux/auth/auth-operation.js","Redux/auth/auth-actions.js","Redux/auth/auth-selectors.js","components/Navigation.js","routes.js","components/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","Redux/contacts/reducer.js","Redux/auth/auth-reducer.js","Redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","state","isAuthenticated","user","name","connect","authSelectors","className","exact","to","activeClassName","AuthNav","routes","styles","container","display","alignItems","avatar","marginRight","fontWeight","mapDispatchToProps","onLogout","authOperation","defaultAvatar","style","src","alt","width","type","onClick","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","Contacts","RegisterPage","LoginPage","onGetCurrentUser","useEffect","fallback","path","items","createReducer","_","payload","filter","id","combineReducers","initialUserState","email","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a55738a7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactssError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport authActions from '../auth/auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUserName };\n","import { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../Redux/auth/auth-selectors';\n\n// const styles = {\n//   link: {\n//     display: 'inline-block',\n//     textDecoration: 'none',\n//     padding: 12,\n//     fontWeight: 700,\n//     color: '#2A363B',\n//   },\n//   activeLink: {\n//     color: '#E84A5F',\n//   },\n// };\n\nconst Navigation = ({ isAuthenticated }) => (\n  <ul className=\"mainNav nav-item\">\n    <li>\n      <NavLink exact to=\"/\" className=\"navLink\" activeClassName=\"navLinkActive\">\n        Home\n      </NavLink>\n    </li>\n    {isAuthenticated && (\n      <li>\n        <NavLink\n          to=\"/contacts\"\n          className=\"navLink\"\n          activeClassName=\"navLinkActive\"\n        >\n          Contacts\n        </NavLink>\n      </li>\n    )}\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default {\n  home: '/',\n  contacts: '/contacts',\n  register: '/register',\n  login: '/login',\n};\n","import { NavLink } from 'react-router-dom';\nimport routes from '../routes';\n\nconst AuthNav = () => (\n  <ul className=\"usermenu nav-item\">\n    <li>\n      <NavLink\n        exact\n        to={routes.register}\n        className=\"navLink\"\n        activeClassName=\"navLinkActive\"\n      >\n        Register\n      </NavLink>\n    </li>\n    <li>\n      <NavLink\n        exact\n        to={routes.login}\n        className=\"navLink\"\n        activeClassName=\"navLinkActive\"\n      >\n        Login\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import defaultAvatar from './default-avatar.png';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../Redux/auth/auth-selectors';\nimport authOperation from '../../Redux/auth/auth-operation';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperation.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav';\nimport UserMenu from './UserMenu';\nimport authSelectors from '../Redux/auth/auth-selectors';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <div className=\"header\">\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../Redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../Redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport authOperation from './Redux/auth/auth-operation';\nimport { Route, Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport routes from './routes';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomePage = lazy(() => import('./views/Homepage'));\nconst Contacts = lazy(() => import('./views/Contacts'));\nconst RegisterPage = lazy(() => import('./views/RegisterPage'));\nconst LoginPage = lazy(() => import('./views/LoginPage'));\n\nconst App = ({ onGetCurrentUser }) => {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, []);\n\n  return (\n    <>\n      <AppBar />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route exact path={routes.home} component={HomePage} />\n          <PrivateRoute\n            exact\n            path={routes.contacts}\n            component={Contacts}\n            redirectTo={routes.login}\n          />\n          <PublicRoute\n            path={routes.register}\n            restricted\n            component={RegisterPage}\n            redirectTo={routes.contacts}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            component={LoginPage}\n            redirectTo={routes.contacts}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperation.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/reducer';\n// import logger from 'redux-logger';\nimport authReducer from './auth/auth-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading=\"Загрузка\" persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}